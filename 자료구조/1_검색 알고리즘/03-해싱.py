'''
# 해싱(Hashing)
해싱은 데이터를 저장할 위치(인덱스)를 간단한 연산으로 구하는 방법이다.
해싱은 데이터의 검색과 추가, 삭제를 효율적으로 수행한다.

예제) 7로 나눈 나머지를 해시값(인덱스)으로 구하기
key값 5   6   20  31  37  53  78
해시값 5   6   6   3   2   4   1

해시 테이블)
인덱스 0   1   2   3   4   5   6
key값 X   78  37  31  53  5  6,20

# 해시값: 해시법을 통해 계산된 데이터 저장 위치(=인덱스)
# 해시 테이블: 해시값을 인덱스로 하는 저장 공간
# 해시 함수: 키를 해시값으로 변환하는 함수.
           임의의 길이를 갖는 데이터를 고정된 길이의 데이터로 변환 시켜주는 함수
'''
# 해시 테이블 생성
# a = [[] for _ in range(7)] # 0~6 인덱스를 가지는 이중 리스트 선언
a = [[], [], [], [], [], [], []] # 0~6 인덱스를 가지는 이중 리스트 선언
print(a)
print()

# 해시 함수 선언
def h(key): # 7로 나눈 나머지를 해시값(인덱스)으로 저장하는 함수 선언
    index = key%7 # 키값으로 해시값(인덱스)를 구함
    a[index].append(key) # 해시 테이블에서 해시값(인덱스) 위치에 키값 저장

# 해싱할 원소값: 5   6   20  31  37  53  78
k = [5,6,20,31,37,53,78]

h(5) # 원소값을 해싱하여 해시테이블에 저장
print(a)
h(6)
print(a)
h(20)
print(a)
h(31)
print(a)
h(37)
print(a)
h(53)
print(a)
h(78)
print(a)
print()

# 키 탐색하기
search_key = 31
print(f'탐색키 위치: {search_key%7}번 인덱스')

# 새로운 키 추가하기
h(14) # 14 -> 0
print(a)
h(16) # 16 -> 2
print(a)